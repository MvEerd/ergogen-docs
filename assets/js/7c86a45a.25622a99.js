"use strict";(self.webpackChunkergogen_docs=self.webpackChunkergogen_docs||[]).push([[577],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(t),d=o,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9644:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={sidebar_position:3},s="Units",u={unversionedId:"units",id:"units",isDocsHomePage:!1,title:"Units",description:"We start with an optional units clause, where we can define units to use in relative calculations.",source:"@site/docs/units.md",sourceDirName:".",slug:"/units",permalink:"/ergogen-docs/units",editUrl:"https://github.com/mveerd/ergogen-docs/edit/main/website/docs/units.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Preprocessing",permalink:"/ergogen-docs/preprocessing"},next:{title:"Points",permalink:"/ergogen-docs/points"}},l=[],p={toc:l};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"units"},"Units"),(0,a.kt)("p",null,"We start with an optional ",(0,a.kt)("inlineCode",{parentName:"p"},"units")," clause, where we can define units to use in relative calculations.",(0,a.kt)("br",{parentName:"p"}),"\n","The three predefined ones are ",(0,a.kt)("inlineCode",{parentName:"p"},"u"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cx"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"cy"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"u: 19 # 19mm MX spacing\ncx: 18 # 18mm Choc X spacing\ncY: 17 # 17mm Choc Y spacing\n")),(0,a.kt)("p",null,"But we can add any other (or modify these predefined ones), or even use an existing measure in calculating a new value (for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"double: 2 u"),").\nRecall how each string that can be interpreted as a math formula will be treated like a number, so this is a great way to add math-level variables to your config."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"units:\n  a: cy - 7\n  b: a * 1.5\n")))}m.isMDXComponent=!0}}]);